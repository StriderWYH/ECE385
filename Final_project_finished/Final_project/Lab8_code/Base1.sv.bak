
module  Base1 ( input         Clk,                // 50 MHz clock
                             Reset,              // Active-high reset signal
                             frame_clk,          // The clock indicating a new frame (~60Hz)
					input [7:0] keycode,
               input [9:0]   DrawX, DrawY,       // Current pixel coordinates
					input logic [9:0] tank1_upleft_X, tank1_upleft_Y,
					input logic [9:0] cannonball_X_Pos,
					input logic [9:0] cannonball_Y_Pos,
               output logic  is_base1,             // Whether current pixel belongs to ball or background
					output logic [2:0] base_HP 
				  
				  );
				  
				  
		logic[2:0] Base_HP;
		
		
		assign base_HP = Base_HP;
		
		
		enum logic [1:0] {NEWBASE, BASEHURT} State, Next_State;
	 
	 always_ff @ (posedge Clk) 
	 begin
		if (Reset)	
			State <= NEWBASE;
		else 
			State <= Next_State;
	 end
	 
	 always_comb 
	 begin
	 Next_State = State;
	 unique case (State)
		NEWBASE:
				Next_State = WAIT;
		WAIT:
			Next_State = WAIT;
		endcase
		
	 case (State)
		PRESSTWO:
			tank_create = 1'b1;
		WAIT: 
			tank_create = 1'b0;
	 endcase
	 end
		
		
endmodule